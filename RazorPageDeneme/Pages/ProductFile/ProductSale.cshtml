 @page
@model RazorPageDeneme.Pages.ProductFile.ProductSaleModel
@{
    ViewData["Title"] = "Sale Product";
}

<form method="post">
    <!-- ProductID'yi SalesTransaction'a doğru bağlıyoruz -->
    <input type="hidden" asp-for="SalesTransaction.ProductID" value="@Model.deneme.ProductID" />

    <div class="form-group">
        <div class="mb-3">
            <label asp-for="deneme.ProductName"></label>
            <input asp-for="deneme.ProductName" class="form-control" readonly />
        </div>
    </div>

    <div class="form-group">
        <label asp-for="SalesTransaction.CustomerID"></label>
        <select asp-for="SalesTransaction.CustomerID" asp-items="Model.CustomerList" class="form-control" placeholder="Choose"></select>
    </div>

    <div class="form-group">
        <label asp-for="SalesTransaction.Piece"></label>
        <input asp-for="SalesTransaction.Piece" class="form-control" max="10" min="0" placeholder=" Choose"  id="pieceInput" placeholder="Enter Quantity" />
    </div>

    <div class="form-group">
        <label asp-for="SalesTransaction.Price"></label>
        <input asp-for="SalesTransaction.Price" class="form-control" id="productPrice" readonly />
    </div>


    <div class="form-group">
        <label asp-for="SalesTransaction.SumPrice"></label>
        <input asp-for="SalesTransaction.SumPrice" class="form-control" id="totalPrice" readonly />
    </div>

    <button class="btn btn-primary">Save</button>
</form>

<script>
    // Ürün fiyatını getirme ve toplam fiyatı hesaplama
    document.addEventListener('DOMContentLoaded', function () {
        // Ürün ID'sini al ve ürüne bağlı fiyatı getir
        const productId = '@Model.deneme.ProductID'; // Razor ile gelen ürün ID'si
        if (productId) {
            fetch(`/SaleFile/NewSale?handler=ProductPrice&productId=${productId}`)
                .then(response => response.json())
                .then(data => {
                    document.getElementById('productPrice').value = data.price; // Fiyatı inputa yaz
                });
        }

        // Adet değiştiğinde toplam fiyatı hesapla
        document.getElementById('pieceInput').addEventListener('input', function () {
            const piece = parseInt(this.value) || 0; // Adet inputu, sayıya dönüştürülür
            const price = parseFloat(document.getElementById('productPrice').value) || 0; // Ürün fiyatı

            // Toplam fiyatı hesapla
            const totalPrice = piece * price;
            document.getElementById('totalPrice').value = totalPrice; // Toplam fiyatı göster
        });
    });
</script>

